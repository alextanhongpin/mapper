// Code generated by github.com/alextanhongpin/mapper, DO NOT EDIT.
package main

import examples "github.com/alextanhongpin/mapper/examples"

var _ Mapper = (*MapperImpl)(nil)

type MapperImpl struct{}

func NewMapperImpl() *MapperImpl {
	return &MapperImpl{}
}

func (m *MapperImpl) mapMainAToMainB(g0 A) B {
	g0NonPtrToPointer := m.mapMainCToMainD(g0.NonPtrToPointer)
	g1NonPtrToPointer := &g0NonPtrToPointer
	var g0Ptr *D
	if g0.Ptr != nil {
		tmp := m.mapMainCToMainD(*g0.Ptr)
		g0Ptr = &tmp
	}
	return B{
		Bool:            g0.Bool,
		ID:              g0.ID,
		Map:             g0.Map,
		NonPtrToPointer: g1NonPtrToPointer,
		Ptr:             g0Ptr,
		Slice:           g0.Slice,
		Str:             g0.Str,
	}
}

func (m *MapperImpl) mapMainCToMainD(g0 C) D {
	return D{
		Age:  &g0.Age,
		Name: g0.Name,
	}
}

func (m *MapperImpl) mapExamplesAToExamplesB(g0 examples.A) examples.B {
	return examples.B{
		Bool:  g0.Bool,
		ID:    g0.ID,
		Map:   g0.Map,
		Slice: g0.Slice,
		Str:   g0.Str,
	}
}

func (m *MapperImpl) AtoB(g0 A) *B {
	g1 := m.mapMainAToMainB(g0)
	g2 := &g1
	return g2
}

func (m *MapperImpl) CPointerToDPointer(g0 *C) *D {
	var g1 *D
	if g0 != nil {
		tmp := m.mapMainCToMainD(*g0)
		g1 = &tmp
	}
	return g1
}

func (m *MapperImpl) CtoD(g0 C) D {
	g1 := m.mapMainCToMainD(g0)
	return g1
}

func (m *MapperImpl) CtoDPointer(g0 C) *D {
	g1 := m.mapMainCToMainD(g0)
	g2 := &g1
	return g2
}

func (m *MapperImpl) ExternalAtoB(g0 examples.A) *examples.B {
	g1 := m.mapExamplesAToExamplesB(g0)
	g2 := &g1
	return g2
}
